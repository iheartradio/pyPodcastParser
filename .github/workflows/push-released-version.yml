
name: push-released-version

on:
  release:
    types: [published]


env:
  REGISTRY: quay.io
  IMAGE_NAME: iheartradio/episodeingestion
  TEST_TAG: iheartradio/episodeingestion:test
  REPO_NAME: episodeingestion

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: cp-github
          status: STARTED
          color: good
        env:
          SLACK_BOT_TOKEN: ${{secrets.CONTENT_PLATFORM_SLACK_GITHUB_TOKEN}}
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.CONTENT_PLATFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CONTENT_PLATFORM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CONTENT_PLATFORM_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.CONTENT_PLATFORM_CODE_ARTIFACT_ROLE }}
          role-duration-seconds: 1200
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.CONTENT_PLATFORM_DOCKER_USERNAME }}
          password: ${{ secrets.CONTENT_PLATFORM_DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Obtaining Git Tag
        id: gitinfo
        run: |
          echo "::set-output name=tag::$(git tag | sort -V | tail -1)"
          echo $(git tag | sort -V | tail -1)
      - name: Build Image
        run: |
          CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain content-platform --domain-owner 827541288795 --query authorizationToken --output text ` &&  pip config set global.extra-index-url https://aws:$CODEARTIFACT_AUTH_TOKEN@content-platform-827541288795.d.codeartifact.us-east-1.amazonaws.com/pypi/content-platform/simple/
          docker build --build-arg CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN  -t quay.io/iheartradio/episodeingestion:${{steps.gitinfo.outputs.tag}} .
      - name: Push Image
        run: |
          docker push quay.io/iheartradio/episodeingestion:${{steps.gitinfo.outputs.tag}}
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{secrets.CONTENT_PLATFORM_SLACK_GITHUB_TOKEN}}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: cp-github
          status: SUCCESS
          color: good
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{secrets.CONTENT_PLATFORM_SLACK_GITHUB_TOKEN}}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: cp-github
          status: FAILED
          color: danger
